{"version":3,"file":"static/webpack/1.af1398ea708777dddcdb.hot-update.js","sources":["webpack:///./src/scripts/containers/App/SvgLine/SvgLine.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { getStroke } from '../../../theme/getTheme';\nimport { makeStyles } from '@material-ui/styles';\nimport _ from 'lodash';\n\nclass SvgLine extends PureComponent {\n  render() {\n    return (\n      <svg width=\"100%\" height=\"100%\" id=\"mind-canvas\">\n        {this.props.lines.length &&\n          this.props.lines.map(line => line && line.index && <Line key={line.d} line={line} />)}\n      </svg>\n    );\n  }\n}\n\nSvgLine.propTypes = {\n  lines: PropTypes.array,\n};\n\nconst useStyles = makeStyles(theme => {\n  return {\n    rootLine: getStroke(1, theme),\n    mainLine: getStroke(2, theme),\n  };\n});\n\nconst areEqual = (prevProps, nextProps) => {\n  return _.isEqual(prevProps.line, nextProps.line);\n};\nconst Line = React.memo(props => {\n  // eslint-disable-next-line no-unused-vars\n  const { d, index, color, ...rest } = props.line;\n  const classes = useStyles(props);\n  const className = index === 1 ? classes.rootLine : classes.mainLine;\n  return (\n    <path fill=\"none\" strokeLinecap=\"square\" d={d} className={className} stroke={color} {...rest} />\n  );\n}, areEqual);\nLine.displayName = 'Line';\nLine.propTypes = {\n  line: PropTypes.object,\n};\n\nexport default SvgLine;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AARA;AACA;AAUA;AACA;AADA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}